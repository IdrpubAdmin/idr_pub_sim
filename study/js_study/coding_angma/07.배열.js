
push() // 배열 삽입

pop() // 배열 삭제

unshift() // 앞에 배열 삽입

shift() // 앞에 배열 삭제

splice(a, n, x) // a부터 n개 의 배열을 지우고 x 추가

slice(a, b) // a부터 b까지 반환

concat() // 배열을 합쳐서 반환

forEach(fn) // 배열 반복

indexOf() // 인자값과 일치하는 첫번째 배열의 인덱스 반환

lastIndexOf() // 인자값과 일치하는 마지막 배열의 인덱스 반환

find(fn) // 함수 값과 일치하는 배열 반환 (일치하는 첫번째 배열만 반환)

findIndex(fn) // 함수 값과 일치하는 배열의 인덱스 반환 (일치하는 첫번째 배열만 반환)

filter(fn) // 함수 값과 일치하는 모든 배열 반환

reverse() // 배열을 역순으로 재정렬

map(fn) // 함수를 받아 특정 기능을 시행하고 새로운 배열 반환

join() // 배열을 합쳐서 문자열로 반환

split() // 문자를 받아 배열로 반환

Array.isArray() // 배열이 맞는지 확인해주는 매서드

sort(fn) // 배열 재정렬 (배열 자체가 변경)

/* let arr = [27, 8, 5, 13]

arr.sort() // [13, 27, 5, 8]
배열에 sort()를 하면 이상하게 정렬해주는데 
이는 문자열로 반환되어 '1'3의 1 '2'7의 2 '5' 순으로 정렬되어서 그럼
이를 해결하기위해 함수를 사용

arr.sort((a,b) => {
    retrun a - b;
}) */

reduce(a, b) // a(누적 계산값), b(현재값) 함수를 처리하고 반환